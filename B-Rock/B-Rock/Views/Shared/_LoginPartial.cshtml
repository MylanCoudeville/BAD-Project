@using Microsoft.AspNetCore.Identity
@using B_Rock.Data
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService authService
@inject SignInManager<B_RockUser> SignInManager
@inject UserManager<B_RockUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">

        </li>
        <li class="nav-item dropdown">
            <a class="nav-link text-dark dropdown-toggle" href="#" data-bs-toggle="dropdown">Account</a>
            <ul class="dropdown-menu">
                <li>
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@User.Identity?.Name</a>
                </li>
                @if ((await authService.AuthorizeAsync(User, Model, "Customer")).Succeeded)
                {
                    <li>
                        <a class="nav-link text-dark" asp-area="" asp-controller="Reservation" asp-action="Overview">Overview tickets</a>
                    </li>
                }
                @if ((await authService.AuthorizeAsync(User, Model, "AdminOnly")).Succeeded)
                {
                    <li>
                        <a class="nav-link text-dark" asp-area="" asp-controller="Question" asp-action="Index">Overview questions</a>
                    </li>
                }
            </ul>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
